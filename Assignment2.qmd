---
title: "PSYR6003-Assignment-2"
author: "Colby Price"
format: html
editor: visual
---

```{r}
#First, to load all the packages that I may require:
library(flexplot)
library(haven)
library(tidyverse)

#loading that .sav file
perfect <- read_sav("PSYR6003.A2.sav")
#lets view this data
view(perfect)
#joy

#Want to convert that weird string to a factor variable
perfect.NB <- filter(perfect, sex == "Male" | sex == "Female")
perfect.NB <- mutate(perfect.NB, sex = as.factor(sex))
#I'm wanting to make sure this worked. so:
print(perfect.NB$sex)
#Neat. It'll do that stuff in the background

#Want to put the subscale scores in there, meaning the means:
#First, reverse code that reverse variable
perfect.NBS <- perfect.NB %>% 
mutate(across(matches("tipm.CONS2.3y"), ~ 8 - .))
#lets view this data to see if I messed up
view(perfect.NBS)
#like the data set, perfect

#Finally, let's start mutating the mean subscale scores:
perfect.NBSM <- perfect.NBS %>% 
  mutate(mps.mean = rowMeans(across(starts_with("mps")), na.rm = F), 
         negative.mean = rowMeans(across(guilt1.3y:host3.3y), na.rm = F),
         tipm.mean = rowMeans(across(starts_with("tipm")), na.rm = F))
#getting rid of the gross other vars
perfect.NBSM <- select(perfect.NBSM, sex, mps.mean, negative.mean, tipm.mean)
#to make sure I didn't mess up again:
view(perfect.NBSM)
```

Descriptive Statistics:

```{r}
#means, medians, range:
summary(perfect.NBSM)

#standard deviations:
sd(perfect.NBSM$mps.mean, na.rm = T)
sd(perfect.NBSM$negative.mean, na.rm = T)
sd(perfect.NBSM$tipm.mean, na.rm = T)

#bivariate correlations:
perfect.C <- mutate(perfect.NBSM, sex = as.numeric(factor(sex)))
cor(perfect.C, use = "pairwise.complete.obs")

```

```{r}
#visualization of bivariate relationships (for fun):
a=flexplot(mps.mean~sex, data=perfect.NBSM)
b=flexplot(tipm.mean~sex, data=perfect.NBSM)
c=flexplot(negative.mean~sex, data=perfect.NBSM)
d=flexplot(negative.mean~tipm.mean, data=perfect.NBSM)
e=flexplot(negative.mean~mps.mean, data=perfect.NBSM)
f=flexplot(tipm.mean~mps.mean, data=perfect.NBSM)
library(patchwork)
a+b+c+d+e+f
```

Research Question: What is the impact of sex, conscientiousness, and SPP on negative affect? *&/or*\
Does SPP impact negative affect more than sex and conscientiousness?

Linear Model: Negative Affect = b~0~ + (Sex \*\* b~1~) + (Conscientiousness \*\* b~2~) + (SPP \*\* b~3~) + E\
Parameter(s) of Interest: Negative Affect = b~0~ + (Sex \*\* b~1~) + (Conscientiousness \*\* b~2~) + **(SPP \*\* b~3~)** + E

Model Comparison: Negative Affect = b~0~ + (Sex \*\* b~1~) + (Conscientiousness \*\* b~2~) + (SPP \*\* b~3~) + E\
Negative Affect = b~0~ + (Sex \*\* b~1~) + (Conscientiousness \*\* b~2~) + E

```{r}
#1. & 2.) Visualize the univariate distributions
#full:
flexplot(negative.mean~mps.mean+tipm.mean | sex, data = perfect.NBSM)
#this looks wacky, so I want to see what it looks like a bit more:
flexplot(negative.mean~mps.mean+tipm.mean | sex, data = perfect.NBSM, method = "quadratic", ghost.line = "black")
#how about comparing to linear:
flexplot(negative.mean~mps.mean+tipm.mean | sex, data = perfect.NBSM, method = "linear")
#yea, no, let's go with quadratic it's prettier
#reduced:
flexplot(negative.mean~tipm.mean | sex, data = perfect.NBSM)


#3.) Visualize the assumptions
full <- lm(negative.mean~mps.mean + tipm.mean + sex, data = perfect.NBSM)
full.q <- lm(negative.mean~mps.mean +tipm.mean + sex + I(mps.mean^2), data = perfect.NBSM)
visualize(full, plot = "residuals")
visualize(full.q, plot = "residuals")

#Full:
#Normality: Fairly normally distributed
#Linearity: Not linear
#Homoskedasticity:Variance in the groups

#Full.q:
#Normality: Fairly normally distributed
#Linearity/Dependence: Better than the other model we tried.
#Homoskedaticity: Variance remains wild
```

```{r}
#robust that error to see if it fixes it?
library(MASS)
robust_full <- rlm(negative.mean~mps.mean + tipm.mean + sex + I(mps.mean^2), data = perfect.NBSM) 
#Is this good? No, but let's keep going anyway. I'll use the full.q model because they're practically the same visually speaking:
visualize(robust_full)
```

```{r}

#saving the reduced
reduced <- lm(negative.mean~tipm.mean + sex, data = perfect.NBSM)

#Next, we're going to have to run the model comparison of the new robust model and the reduced model:
model.comparison(full.q, reduced)
#The full.q model seems to be better for our study's purpose

#Let's do some estimates and stuff:
estimates(full.q)
summary(full.q)
```
